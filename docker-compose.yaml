services:
  redis:
    image: redis:8
    # ports:
    #   - 6379:6379
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  mongo:
    image: mongo:8
    # ports:
    #   - ${MONGODB_PORT:-27017}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASS}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping').ok"]
      interval: 30s
      timeout: 10s
      retries: 3

  express: 
    image: mongo-express:1.0.2
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${EXPRESS_PASS}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASS}
      ME_CONFIG_MONGODB_SERVER: mongo
    depends_on:
      mongo:
        condition: service_healthy
  producer:
    build: scheduler/producer
    environment:
      BROKER_HOST: redis
      MONGODB_HOST: mongo
    depends_on:
      - consumer
  consumer:
    build: scheduler/consumer
    environment:
      BROKER_HOST: redis
    depends_on:
      - redis
  web:
    build: app
    ports:
      - 5000:5000
    environment:
      API_ENDPOINT: producer:5000
      MONGODB_HOST: mongo
    depends_on:
      - producer
  
